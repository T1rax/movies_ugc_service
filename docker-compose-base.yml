version: '3.4'
services:

  zookeeper:
    image: confluentinc/cp-zookeeper:7.3.2
    hostname: zookeeper
    container_name: zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    volumes:
      - ./data/zookeeper/data:/data
      - ./data/zookeeper/datalog:/datalog

  broker:
    image: confluentinc/cp-kafka:7.3.2
    hostname: broker
    container_name: broker
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://broker:29092,PLAINTEXT_HOST://broker:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
    volumes:
      - ./data/broker/data:/var/lib/broker/data
  
  clickhouse-node1:
    image: yandex/clickhouse-server:20.3
    container_name: clickhouse-node1
    hostname: clickhouse-node1
    volumes:
      - ./data/db/ddl/setup_clickhouse.sql:/docker-entrypoint-initdb.d/setup_clickhouse.sql
      - ./data/db/node1:/etc/clickhouse-server

  clickhouse-node2:
    image: yandex/clickhouse-server:20.3
    container_name: clickhouse-node2
    hostname: clickhouse-node2
    volumes:
      - ./data/db/node2:/etc/clickhouse-server

  mongo:
    image: mongo:4.2.24
    restart: always
    environment:
      MONGO_INITDB_DATABASE: ${MONGO_INITDB_DATABASE}
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_INITDB_ROOT_USERNAME}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_INITDB_ROOT_PASSWORD}
    volumes:
      - mongo:/data/db
    env_file:
      - ./.env

  mongo-express:
    image: mongo-express:0.54.0
    restart: always
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: ${MONGO_INITDB_ROOT_USERNAME}
      ME_CONFIG_MONGODB_ADMINPASSWORD: ${MONGO_INITDB_ROOT_PASSWORD}
      ME_CONFIG_MONGODB_URL: ${ME_CONFIG_MONGODB_URL}

  fastapi:
    build: 
      context: ./.
      dockerfile: src/Dockerfile
    env_file:
      - ./.env

  nginx:
    image: nginx:latest
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/conf.d:/etc/nginx/conf.d:ro
      - /tmp/logs/nginx/:/var/log/nginx/
    ports:
      - 80:80

  logstash:
    image: logstash:7.10.1
    environment:
      XPACK_MONITORING_ENABLED: false
      ES_HOST: elasticsearch:9200
    volumes:
      - ./logstash/logstash.conf:/config/logstash.conf:ro
    command: logstash -f /config/logstash.conf

  elasticsearch:
    image: elasticsearch:7.10.1
    environment:
      discovery.type: single-node
    volumes:
      - /tmp/esdata:/tmp/elasticsearch/data

  kibana:
    image: kibana:7.10.1

  filebeat:
    image: elastic/filebeat:7.10.1
    volumes:
      - /tmp/logs/nginx:/var/log/nginx:ro
      - ./filebeat/filebeat.yml:/usr/share/filebeat/filebeat.yml

  jaeger:
    image: jaegertracing/all-in-one:latest
    ports:
      - "5775:5775/udp"
      - "6831:6831/udp"
      - "6832:6832/udp"
      - "5778:5778"
      - "16686:16686"
      - "14268:14268"
      - "14250:14250"
      - "9411:9411"
    depends_on:
      - fastapi

volumes:
  mongo:
